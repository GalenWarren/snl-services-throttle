<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.snl.services</groupId>
  <artifactId>throttle-core</artifactId>
  <version>0.0.1</version>
  <name>${project.artifactId}</name>
  <description>SNL API Throttling Service</description>
  <inceptionYear>2014</inceptionYear>
  <licenses>
  </licenses>

  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <scala.tools.version>2.10</scala.tools.version>
    <scala.version>2.10.0</scala.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.specs2</groupId>
      <artifactId>specs2_${scala.tools.version}</artifactId>
      <version>1.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.tools.version}</artifactId>
      <version>2.0.M6-SNAP8</version>
      <scope>test</scope>
    </dependency>
    
    <!-- library dependencies -->
    <dependency>
    	<groupId>org.clapper</groupId>
    	<artifactId>grizzled-slf4j_2.10</artifactId>
    	<version>1.0.2</version>
    </dependency>
    <dependency>
    	<groupId>org.apache.spark</groupId>
    	<artifactId>spark-core_2.10</artifactId>
    	<version>1.2.0</version>
    </dependency>
	<dependency>
	    <groupId>org.apache.spark</groupId>
	    <artifactId>spark-streaming_2.10</artifactId>
	    <version>1.2.0</version>
	</dependency>    
	<dependency>
    	<groupId>org.apache.spark</groupId>
    	<artifactId>spark-streaming-kafka_2.10</artifactId>
    	<version>1.2.0</version>
    </dependency>
    <dependency>
    	<groupId>com.couchbase.client</groupId>
    	<artifactId>java-client</artifactId>
    	<version>2.0.2</version>
    </dependency>
    <dependency>
    	<groupId>io.reactivex</groupId>
    	<artifactId>rxscala_2.10</artifactId>
    	<version>0.23.0</version>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <!-- see http://davidb.github.com/scala-maven-plugin -->
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.3</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
                <arg>-deprecation</arg>
                <arg>-feature</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.13</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
          <includes>
            <include>**/*Test.*</include>
            <include>**/*Suite.*</include>
          </includes>
        </configuration>
      </plugin>
      
	  <plugin>
	    <groupId>org.codehaus.mojo</groupId>
	    <artifactId>exec-maven-plugin</artifactId>
	    <version>1.3.2</version>
	    <executions>
	    	<execution>
	    		<goals>
	    			<goal>java</goal>
	    		</goals>
	    	</execution>
	    </executions>
	    <configuration>
	      <mainClass>akka.Main</mainClass>
	      <systemProperties>
	      	<systemProperty>
	      	  <key>snl.services.throttle.spark.master</key>
	      	  <value>local[2]</value>
	      	</systemProperty>
	      </systemProperties>
	      <arguments>
	      	<arg>com.snl.services.throttle.Main</arg>
	      </arguments>
	    </configuration>
	  </plugin>     
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-shade-plugin</artifactId>
		<version>1.6</version>
		<executions>
		  <execution>
		    <phase>package</phase>
		    <goals>
		      <goal>shade</goal>
		    </goals>
		    <configuration>
    		  <filters>
        	  	<filter>
        	  	  <artifact>*:*</artifact>
            	  <excludes>
                	<exclude>META-INF/*.SF</exclude>
                	<exclude>META-INF/*.DSA</exclude>
                	<exclude>META-INF/*.RSA</exclude>
            	  </excludes>
        		</filter>
    		  </filters>		      
		      <transformers>
		        <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
		          <resource>reference.conf</resource>
		        </transformer>
		        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
		          <manifestEntries>
		            <Main-Class>akka.Main</Main-Class>
		          </manifestEntries>
		        </transformer>
		      </transformers>
		    </configuration>
		  </execution>
		</executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>package</phase>
            <configuration>
              <target>
              	<copy todir="lib">
              	  <fileset dir="target" includes="*.jar"/>
              	</copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>      
      
    </plugins>
  </build>
  
  <profiles>
  
  	<!-- The submit profile, marks hadoop and spark as provided so it doesn't get included in the jar -->
  	<profile>
   	  <id>submit</id>
   	  <dependencies>
   	  	<dependency>
	    	<groupId>org.apache.spark</groupId>
	      	<artifactId>spark-core_2.10</artifactId>
	    	<version>1.2.0</version>
	    	<scope>provided</scope>
	  	</dependency>
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-streaming_2.10</artifactId>
		    <version>1.2.0</version>
	    	<scope>provided</scope>
		</dependency>    
   	  </dependencies>
  	</profile>
  
  </profiles>
  
</project>
