package com.snl.services.throttle.util

import akka.actor._
import akka.util._
import java.util.concurrent.TimeUnit
import scala.concurrent.duration._
import com.typesafe.config._

/**
 * The configuration extension
 */
class Configuration ( config: Config ) extends Extension {
  
  /**
   * The name of the topic for requests
   */
  val requestsTopic = config.getString("snl.services.throttle.requestsTopic")
  
  /**
   * The metadata endpoint for kafka
   */
  val kafkaMetadataBrokerList = config.getString("snl.services.throttle.kafka.metadataBrokerList")
  
  /**
   * The request group
   */
  val requestGroupCount = config.getInt("snl.services.throttle.util.stress.requestGroupCount")
  
  /**
   * The number of keys generated by the stress utility
   */
  val stressUtilKeyCount = config.getInt("snl.services.throttle.util.stress.keyCount")
  
  /**
   * The stress util key generation period
   */
  val stressUtilPeriod = Configuration.getDuration( config, "snl.services.throttle.util.stress.period" )
  
  /**
   * The max number of hits generated for each interval
   */
  val stressUtilMaxHits= config.getInt("snl.services.throttle.util.stress.maxHits")
  
}

object Configuration extends ExtensionId[Configuration] with ExtensionIdProvider {

  /**
   * Lookup value for this extension
   */
  override def lookup = Configuration
  
  /**
   * Create the extension
   */
  override def createExtension( system: ExtendedActorSystem ) = new Configuration( system.settings.config )
  
  /**
   * Helper to get a duration from a config file
   */
  def getDuration( config: Config, name: String, unit: TimeUnit = TimeUnit.MILLISECONDS ) = Duration( config.getDuration(name, unit), unit )
}